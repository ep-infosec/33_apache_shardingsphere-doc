<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>00-overviews on </title>
    <link>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/</link>
    <description>Recent content in 00-overviews on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 13 Apr 2017 16:06:17 +0800</lastBuildDate>
    
	<atom:link href="https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>概览</title>
      <link>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/</link>
      <pubDate>Thu, 13 Apr 2017 16:06:17 +0800</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/</guid>
      <description>概述 &amp;nbsp; &amp;nbsp; &amp;nbsp; 
Elastic-Job是一个分布式调度解决方案，由两个相互独立的子项目Elastic-Job-Lite和Elastic-Job-Cloud组成。
Elastic-Job-Lite定位为轻量级无中心化解决方案，使用jar包的形式提供分布式任务的协调服务。
   
功能列表  分布式调度协调 弹性扩容缩容 失效转移 错过执行作业重触发 作业分片一致性，保证同一分片在分布式环境中仅一个执行实例 自诊断并修复分布式不稳定造成的问题 支持并行调度 支持作业生命周期操作 丰富的作业类型 Spring整合以及命名空间提供 运维平台  交流与参与  报告确定的bug，提交增强功能建议和提交补丁等，请阅读如何进行贡献。  使用Elastic-Job的公司如果方便请留下公司+网址 https://github.com/elasticjob/elastic-job/issues/254</description>
    </item>
    
    <item>
      <title>简介</title>
      <link>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/intro/</link>
      <pubDate>Tue, 06 Dec 2016 22:38:50 +0800</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/intro/</guid>
      <description>Elastic-Job-Lite定位为轻量级无中心化解决方案，使用jar包的形式提供最轻量级的分布式任务的协调服务，外部依赖仅Zookeeper。
基本概念 1. 分片概念 任务的分布式执行，需要将一个任务拆分为多个独立的任务项，然后由分布式的服务器分别执行某一个或几个分片项。
例如：有一个遍历数据库某张表的作业，现有2台服务器。为了快速的执行作业，那么每台服务器应执行作业的50%。 为满足此需求，可将作业分成2片，每台服务器执行1片。作业遍历数据的逻辑应为：服务器A遍历ID以奇数结尾的数据；服务器B遍历ID以偶数结尾的数据。 如果分成10片，则作业遍历数据的逻辑应为：每片分到的分片项应为ID%10，而服务器A被分配到分片项0,1,2,3,4；服务器B被分配到分片项5,6,7,8,9，直接的结果就是服务器A遍历ID以0-4结尾的数据；服务器B遍历ID以5-9结尾的数据。
2. 分片项与业务处理解耦 Elastic-Job并不直接提供数据处理的功能，框架只会将分片项分配至各个运行中的作业服务器，开发者需要自行处理分片项与真实数据的对应关系。
3. 个性化参数的适用场景 个性化参数即shardingItemParameter，可以和分片项匹配对应关系，用于将分片项的数字转换为更加可读的业务代码。
例如：按照地区水平拆分数据库，数据库A是北京的数据；数据库B是上海的数据；数据库C是广州的数据。 如果仅按照分片项配置，开发者需要了解0表示北京；1表示上海；2表示广州。 合理使用个性化参数可以让代码更可读，如果配置为0=北京,1=上海,2=广州，那么代码中直接使用北京，上海，广州的枚举值即可完成分片项和业务逻辑的对应关系。
核心理念 1. 分布式调度 Elastic-Job-Lite并无作业调度中心节点，而是基于部署作业框架的程序在到达相应时间点时各自触发调度。
注册中心仅用于作业注册和监控信息存储。而主作业节点仅用于处理分片和清理等功能。
2. 作业高可用 Elastic-Job-Lite提供最安全的方式执行作业。将分片总数设置为1，并使用多于1台的服务器执行作业，作业将会以1主n从的方式执行。
一旦执行作业的服务器崩溃，等待执行的服务器将会在下次作业启动时替补执行。开启失效转移功能效果更好，可以保证在本次作业执行时崩溃，备机立即启动替补执行。
3. 最大限度利用资源 Elastic-Job-Lite也提供最灵活的方式，最大限度的提高执行作业的吞吐量。将分片项设置为大于服务器的数量，最好是大于服务器倍数的数量，作业将会合理的利用分布式资源，动态的分配分片项。
例如：3台服务器，分成10片，则分片项分配结果为服务器A=0,1,2;服务器B=3,4,5;服务器C=6,7,8,9。 如果服务器C崩溃，则分片项分配结果为服务器A=0,1,2,3,4;服务器B=5,6,7,8,9。在不丢失分片项的情况下，最大限度的利用现有资源提高吞吐量。
整体架构图 快速入门 引入maven依赖 &amp;lt;!-- 引入elastic-job-lite核心模块 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.elasticjob&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;elastic-job-lite-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${latest.release.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- 使用springframework自定义命名空间时引入 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.elasticjob&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;elastic-job-lite-spring&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${latest.release.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;  作业开发 public class MyElasticJob implements SimpleJob { @Override public void execute(ShardingContext context) { switch (context.getShardingItem()) { case 0: // do something by sharding item 0 break; case 1: // do something by sharding item 1 break; case 2: // do something by sharding item 2 break; // case n: .</description>
    </item>
    
    <item>
      <title>新闻</title>
      <link>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/news/</link>
      <pubDate>Wed, 12 Apr 2017 16:06:17 +0800</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/news/</guid>
      <description> 新闻  2017-09 Mesosphere新闻：Q&amp;amp;A with Zhang Liang of Dangdang: the biggest book seller in China
 2017-04 InfoQ新闻：分布式调度中间件Elastic-Job 2.1.0发布：Cloud Native里程碑版本
 2017-03 源码分析：Elastic-Job项目源码分析系列
 2015-12 InfoQ文章：详解当当网的分布式作业框架elastic-job
 2015-11 高可用架构群分享：新一代分布式任务调度框架，elastic-job开源项目的10项特性
 2015-11 CSDN专访：深度解读分布式作业调度框架elastic-job
 2015-09 InfoQ新闻：当当开源elastic-job，分布式作业调度框架
  </description>
    </item>
    
    <item>
      <title>采用公司</title>
      <link>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/company/</link>
      <pubDate>Wed, 12 Apr 2017 16:06:17 +0800</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/company/</guid>
      <description> 采用公司（统计中） 公司排名不分先后，按拼音顺序排名
36氪 E护通 PINTEC 帮5采 畅移 当当 凤凰汽车 国美 记健康 简理财 茧数科技 金柚网 就医160 快钱 拉手网 懒人听书 捞财宝 联想商城 米袋集团 摩拜单车 全时 赛特斯 首汽约车 拓尔思 微盟 唯品会 网仓 文轩网 华图教育 亚信 耀莱在线 一加手机 蚁坊软件 翼龙贷 翼支付 银狐财富 有货网 有信电话 云猴网 浙江电子口岸 浙金网 中国平安 猪八戒网 赚啦理财 自如网 走秀网 </description>
    </item>
    
    <item>
      <title>贡献代码</title>
      <link>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/contribution/</link>
      <pubDate>Tue, 06 Dec 2016 22:38:50 +0800</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/legacy/lite-2.x/00-overview/contribution/</guid>
      <description>您可以报告bug，提交一个新的功能增强建议或者直接对以上内容提交改进补丁。
报告bug 本章节介绍如何提交一个bug。
报告一个新bug之前  确定在最新版本中该bug存在。我们将不会持续维护所有的发布版本，所有的修改仅根据当前版本。 确认该bug是可以复现的。请尽量提供完整的重现步骤。 请确定这不是一个重复的bug。 查看Issue Page列表，搜索您要提交的bug是否已经被报告过。  如何提交一个有质量的bug 请在Issue Page页面中提交bug。
 使用一个清晰并有描述性的标题来定义bug。 详细的描述复现bug的步骤。包括您使用的SQL，配置情况，预计产生的结果，实际产生的结果。并附加详细的TRACE日志。 如果程序抛出异常，请附加完整的堆栈日志。 如有可能，请附上屏幕截图或动态的GIF图，这些图片能帮助演示整个问题的产生过程。 如果涉及性能问题，请附加上CPU，内存或网络磁盘IO的Profile截图。 说明适用的版本，只有release版本的bug才可以提交，并且应该是当前最新版本。 说明适用的操作系统，及其版本。 使用bug标签(Label)来标记这个issue。  以下是bug的Markdown模板，请按照该模板填写issue。
[问题简单描述] **问题复现步骤:** 1. [第一步] 2. [第二步] 3. [其他步骤...] **期望的表现:** [在这里描述期望的表现] **观察到的表现:** [在这里描述观察到的表现] **屏幕截图和动态GIF图** ![复现步骤的屏幕截图和动态GIF图](图片的url) **Elastic-Job版本:** [输入Elastic-Job的版本] **操作系统及版本:** [输入操作系统及版本]  提交功能增强建议 本章节介绍如何提交一个功能增强建议。
提交一个功能增强建议之前  请确定这不是一个重复的功能增强建议。 查看Issue Page列表，搜索您要提交的功能增强建议是否已经被提交过。  如何提交一个好的功能增强建议 请在Issue Page页面中提交功能增强建议。
 使用一个清晰并有描述性的标题来定义增强建议。 详细描述增强功能的行为模式。 解释说明为什么该功能是对大多数用户是有用的。新功能应该具有广泛的适用性。 如有可能，可以列出其他数据库中间已经具备的类似功能。商用与开源软件均可。 使用enhancement标签(Label)来标记这个issue。  以下是功能增强建议的Markdown模板，请按照该模板填写issue。
[简单的建议描述] **建议的新功能行为** [描述新功能应表现的行为模式] **为什么这个新功能是对大多数用户有用的** [解释这个功能为什么对大多数用户是有用的] [列出其他的数据库中间件是否包含该功能，且如何实现的]  贡献补丁(patch) 本章节向贡献者介绍开发规范、环境、示例和文档。</description>
    </item>
    
  </channel>
</rss>