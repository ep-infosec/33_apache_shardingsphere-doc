<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运维手册 on ElasticJob</title>
    <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/operation/</link>
    <description>Recent content in 运维手册 on ElasticJob</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/operation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>部署指南</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/operation/deploy-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/operation/deploy-guide/</guid>
      <description>调度器部署步骤  启动 ElasticJob-Cloud-Scheduler 和 Mesos 指定作为注册中心的 ZooKeeper 启动 Mesos Master 和 Mesos Agent 解压 elasticjob-cloud-scheduler-${version}.tar.gz 执行 bin\start.sh 脚本启动 elasticjob-cloud-scheduler  作业部署步骤  确保 ZooKeeper, Mesos Master/Agent 以及 ElasticJob-Cloud-Scheduler 已正确启动 将打包作业的 tar.gz 文件放至网络可访问的位置，如：ftp或http。打包的 tar.gz 文件中 main 方法需要调用 ElasticJob-Cloud 提供的 JobBootstrap.execute 方法 使用 curl 命令调用 RESTful API 发布应用及注册作业。详情请参见：配置指南  调度器配置步骤 可修改 conf\elasticjob-cloud-scheduler.properties 文件变更系统配置。
配置项说明：
   属性名称 是否必填 默认值 描述     hostname 是  服务器真实的 IP 或 hostname，不能是 127.</description>
    </item>
    
    <item>
      <title>高可用</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/operation/high-availability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/operation/high-availability/</guid>
      <description>介绍 调度器的高可用是通过运行几个指向同一个 ZooKeeper 集群的 ElasticJob-Cloud-Scheduler 实例来实现的。 ZooKeeper 用于在当前主 ElasticJob-Cloud-Scheduler 实例失败的情况下执行领导者选举。 通过至少两个调度器实例来构成集群，集群中只有一个调度器实例提供服务，其他实例处于待命状态。 当该实例失败时，集群会选举剩余实例中的一个来继续提供服务。
配置 每个 ElasticJob-Cloud-Scheduler 实例必须使用相同的 ZooKeeper 集群。 例如，如果 ZooKeeper 的 Quorum 为 zk://1.2.3.4:2181,2.3.4.5:2181,3.4.5.6:2181/elasticjob-cloud，则 elasticjob-cloud-scheduler.properties 中 ZooKeeper 相关配置为：
# ElasticJob-Cloud&#39;s ZooKeeper address zk_servers=1.2.3.4:2181,2.3.4.5:2181,3.4.5.6:2181 # ElasticJob-Cloud&#39;s ZooKeeper namespace zk_namespace=elasticjob-cloud </description>
    </item>
    
    <item>
      <title>运维平台</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/operation/web-console/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/operation/web-console/</guid>
      <description>运维平台内嵌于 elasticjob-cloud-scheduler 的 jar 包中，无需额外启动 WEB 服务器。 可通过修改配置文件中 http_port 参数来调整启动端口,默认端口为 8899，访问地址为 http://{your_scheduler_ip}:8899。
登录 提供两种账户，管理员及访客，管理员拥有全部操作权限，访客仅拥有察看权限。 默认管理员用户名和密码是 root/root，访客用户名和密码是 guest/guest，可通过 conf\auth.properties 修改管理员及访客用户名及密码。
功能列表  应用管理（发布、修改、查看） 作业管理（注册、修改、查看以及删除） 作业状态查看（待运行、运行中、待失效转移） 作业历史查看（运行轨迹、执行状态、历史仪表盘）  设计理念 运维平台采用纯静态 HTML + JavaScript 方式与后台的 RESTful API 交互，通过读取作业注册中心展示作业配置和状态，数据库展现作业运行轨迹及执行状态，或更新作业注册中心数据修改作业配置。</description>
    </item>
    
  </channel>
</rss>