<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>贡献指南 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/community/cn/involved/contribute/</link>
    <description>Recent content in 贡献指南 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/community/cn/involved/contribute/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>贡献者指南</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/contribute/contributor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/contribute/contributor/</guid>
      <description>您可以报告 bug，提交一个新的功能增强建议或者直接对以上内容提交改进补丁。
提交 issue  在提交 issue 之前，请经过充分的搜索，确定该 issue 不是通过简单的检索即可以解决的问题。 查看 issue 列表，确定该 issue 不是一个重复的问题。 新建一个 issue 并选择您的 issue 类型。 使用一个清晰并有描述性的标题来定义 issue。 根据模板填写必要信息。 在提交 issue 之后，对该 issue 分配合适的标签。如：bug，enhancement，discussion 等。 请对自己提交的 issue 保持关注，在讨论中进一步提供必要信息。  开发流程 1. 准备仓库
到 ShardingSphere GitHub Repo fork 仓库到你的 GitHub 账号。
克隆到本地。
git clone https://github.com/(your_github_name)/shardingsphere.git 添加 ShardingSphere 远程仓库。
git remote add apache https://github.com/apache/shardingsphere.git git remote -v 编译并安装所有模块到 Maven 本地仓库缓存，同时会生成 ANTLR .g4 语法文件对应的解析器 Java 类，这样在 IDE 就不会有相关的编译错误了。
cd shardingsphere mvn clean install -Dmaven.</description>
    </item>
    
    <item>
      <title>开发环境指南</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/contribute/dev-env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/contribute/dev-env/</guid>
      <description>安装 Git 使用最新版。
可以从 Git 下载页面 下载最新安装包。
如果你运行的是 macOS 或者 Linux 系统，那也可以从相关软件仓库直接安装。
Git 配置 如果系统是 Windows，请在克隆 ShardingSphere 代码之前完成以下配置。
在 PowerShell 或者 cmd 执行以下命令，预防克隆 ShardingSphere 代码的时候出现 filename too long 错误：
git config --global core.longpaths true 安装 JDK 使用 JDK 8 或以上版本。
可以从 OpenJDK 下载页面 下载。
可以根据自己的系统自行搜索 JDK 安装指南。
安装 Maven 可选。Maven 安装并配置好的情况下可以使用 mvn 命令，否则可以使用 mvnw 命令（自动下载并安装需要的 Maven，使用在 .mvn/wrapper/maven-wrapper.properties 配置的版本）。
使用 Maven 3.6 或以上版本。
可以从 Maven 下载页面 下载。
请参考 Maven 官方教程 完成安装。</description>
    </item>
    
    <item>
      <title>文档贡献指南</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/contribute/document/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/contribute/document/</guid>
      <description>如果您想帮助贡献 ShardingSphere 文档或网站，我们很乐意为您提供帮助！任何人都可以贡献，无论您是刚接触项目还是已经使用 ShardingSphere 很长时间，无论是自我认同的开发人员、最终用户，还是那些无法忍受错别字的人，都可以对文档或者网站进行贡献。
在贡献者指南里，已经提到如何提交 Issues 与 Pull Request，这里我们将要介绍如何给官方文档提交 Pull Request。
前置条件  熟悉 官方网站。 熟悉 GitHub 协同开发流程。 熟练掌握 Markdown。 熟悉 Hugo。  Fork 文档项目 Fork ShardingSphere 的 master 分支。
目录结构说明 shardingsphere ├─docs ├─community │ ├─archetypes │ ├─content │ │ ├─contribute │ │ ├─powered-by │ │ ├─security │ │ └─team │ ├─layouts │ ├─static │ └─themes ├─document │ ├─archetypes │ ├─content │ │ ├─concepts │ │ │ ├─adaptor │ │ │ ├─distsql │ │ │ ├─mode │ │ │ └─pluggable │ │ ├─dev-manual │ │ ├─downloads │ │ ├─features │ │ │ ├─encrypt │ │ │ ├─governance │ │ │ ├─readwrite-splitting │ │ │ ├─scaling │ │ │ ├─shadow │ │ │ ├─sharding │ │ │ │ ├─concept │ │ │ │ ├─principle │ │ │ │ └─use-norms │ │ │ ├─test-engine │ │ │ └─transaction │ │ │ ├─concept │ │ │ ├─principle │ │ │ └─use-norms │ │ ├─others │ │ │ ├─api-change-history │ │ │ └─faq │ │ ├─overview │ │ ├─quick-start │ │ ├─user-manual │ │ │ ├─shardingsphere-jdbc │ │ │ │ ├─configuration │ │ │ │ └─usage │ │ │ ├─shardingsphere-proxy │ │ │ ├─shardingsphere-sidecar │ │ │ └─shardingsphere-scaling │ ├─i18n │ ├─layouts │ ├─static │ └─themes 文档基础知识 ShardingSphere 文档使用 Markdown 编写，并使用 Hugo 进行处理生成 html，部署于 asf-site 分支，源代码位于 Github。</description>
    </item>
    
  </channel>
</rss>