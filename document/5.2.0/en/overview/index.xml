<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.2.0/en/overview/</link>
    <description>Recent content in Overview on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.2.0/en/overview/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What is ShardingSphere</title>
      <link>https://shardingsphere.apache.org/document/5.2.0/en/overview/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.2.0/en/overview/intro/</guid>
      <description>Introduction Apache ShardingSphere is an open source ecosystem that allows you to transform any database into a distributed database system. The project includes a JDBC and a Proxy, and its core adopts a micro-kernel and pluggable architecture. Thanks to its plugin-oriented architecture, features can be flexibly expanded at will.
The project is committed to providing a multi-source heterogeneous, enhanced database platform and further building an ecosystem around the upper layer of the platform.</description>
    </item>
    
    <item>
      <title>Design Philosophy</title>
      <link>https://shardingsphere.apache.org/document/5.2.0/en/overview/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.2.0/en/overview/design/</guid>
      <description>ShardingSphere adopts the database plus design philosophy, which is committed to building the standards and ecology of the upper layer of the database and supplementing the missing capabilities of the database in the ecology.
Connect: Create database upper level standard Through flexible adaptation of database protocols, SQL dialects, and database storage, it can quickly build standards on top of multi-modal heterogeneous databases, while providing standardized connection mode for applications through built-in DistSQL.</description>
    </item>
    
    <item>
      <title>Deployment</title>
      <link>https://shardingsphere.apache.org/document/5.2.0/en/overview/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.2.0/en/overview/deployment/</guid>
      <description>Deployment Apache ShardingSphere includes two independent clients: ShardingSphere-JDBC &amp;amp; ShardingSphere-Proxy. They all provide functions of data scale-out, distributed transaction and distributed governance, applicable in a variety of scenarios such as Java isomorphism, heterogeneous languages, and a cloud-native environment.
Independent ShardingSphere-JDBC ShardingSphere-JDBC is a lightweight Java framework that provides additional services at Java&amp;rsquo;s JDBC layer. With the client connecting directly to the database, it provides services in the form of jar and requires no extra deployment and dependence.</description>
    </item>
    
  </channel>
</rss>