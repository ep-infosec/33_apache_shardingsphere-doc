<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sharding-Scaling on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/4.1.0/en/manual/sharding-scaling/</link>
    <description>Recent content in Sharding-Scaling on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/4.1.0/en/manual/sharding-scaling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build</title>
      <link>https://shardingsphere.apache.org/document/4.1.0/en/manual/sharding-scaling/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/4.1.0/en/manual/sharding-scaling/build/</guid>
      <description>Build&amp;amp;Deployment  Execute the following command to compile and generate the sharding-scaling binary package:  git clone https://github.com/apache/incubator-shardingsphere.git； cd incubarot-shardingsphere; mvn clean install -Prelease; The binary package&amp;rsquo;s directory is:/sharding-distribution/sharding-scaling-distribution/target/apache-shardingsphere-incubating-${latest.release.version}-sharding-scaling-bin.tar.gz。
Unzip the distribution package, modify the configuration file conf/server.yaml, we should ensure the port does not conflict with others, and other values can be left as default:  port: 8888 blockQueueSize: 10000 pushTimeout: 1000 workerThread: 30 start up sharding-scaling:  sh bin/start.</description>
    </item>
    
    <item>
      <title>Manual</title>
      <link>https://shardingsphere.apache.org/document/4.1.0/en/manual/sharding-scaling/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/4.1.0/en/manual/sharding-scaling/usage/</guid>
      <description>Manual Environment JAVA，JDK 1.8+.
The migration scene we support：
   Source Destination Whether support or not     MySQL sharding-proxy support   PostgreSQL sharding-proxy support    Attention: If the backend database is MySQL, download MySQL Connector/J and decompress, then copy mysql-connector-java-5.1.47.jar to ${sharding-scaling}\lib directory.
API Sharding-Scaling provides a simple HTTP API
Start scaling job Interface description：POST /shardingscaling/job/start
Body：
   Parameter Describe     ruleConfiguration.</description>
    </item>
    
  </channel>
</rss>