<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java API on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/java-api/</link>
    <description>Recent content in Java API on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/java-api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mode Configuration</title>
      <link>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/java-api/mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/java-api/mode/</guid>
      <description>Root Configuration Class name: org.apache.shardingsphere.infra.config.mode.ModeConfiguration
Attributes:
   Name DataType Description Default Value     type String Type of mode configuration
Values could be: Memory, Standalone, Cluster Memory   repository PersistRepositoryConfiguration Persist repository configuration
Memory type does not need persist, could be null
Standalone type uses StandalonePersistRepositoryConfiguration
Cluster type uses ClusterPersistRepositoryConfiguration    overwrite boolean Whether overwrite persistent configuration with local configuration false    Standalone Persist Configuration Class name: org.</description>
    </item>
    
    <item>
      <title>Data Source</title>
      <link>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/java-api/data-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/java-api/data-source/</guid>
      <description>ShardingSphere-JDBC Supports all JDBC drivers and database connection pools.
Example In this example, the database driver is MySQL, and connection pool is HikariCP, which can be replaced with other database drivers and connection pools. When using ShardingSphere JDBC, the property name of the JDBC pool depends on the definition of the respective JDBC pool, and is not defined by ShardingSphere. For related processing, please refer to the class org.apache.shardingsphere.infra.datasource.pool.creator.DataSourcePoolCreator.
Map&amp;lt;String, DataSource&amp;gt; dataSourceMap = new HashMap&amp;lt;&amp;gt;(); // Configure the 1st data source HikariDataSource dataSource1 = new HikariDataSource(); dataSource1.</description>
    </item>
    
  </channel>
</rss>