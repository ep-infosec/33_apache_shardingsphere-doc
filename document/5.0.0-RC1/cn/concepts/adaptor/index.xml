<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>接入端 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/concepts/adaptor/</link>
    <description>Recent content in 接入端 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.0.0-RC1/cn/concepts/adaptor/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ShardingSphere-JDBC</title>
      <link>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/concepts/adaptor/shardingsphere-jdbc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/concepts/adaptor/shardingsphere-jdbc/</guid>
      <description>简介 ShardingSphere-JDBC 是 Apache ShardingSphere 的第一个产品，也是 Apache ShardingSphere 的前身。 定位为轻量级 Java 框架，在 Java 的 JDBC 层提供的额外服务。 它使用客户端直连数据库，以 jar 包形式提供服务，无需额外部署和依赖，可理解为增强版的 JDBC 驱动，完全兼容 JDBC 和各种 ORM 框架。
 适用于任何基于 JDBC 的 ORM 框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template 或直接使用 JDBC。 支持任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, Druid, HikariCP 等。 支持任意实现 JDBC 规范的数据库，目前支持 MySQL，Oracle，SQLServer，PostgreSQL 以及任何遵循 SQL92 标准的数据库。  对比     ShardingSphere-JDBC ShardingSphere-Proxy     数据库 任意 MySQL/PostgreSQL   连接消耗数 高 低   异构语言 仅Java 任意   性能 损耗低 损耗略高   无中心化 是 否   静态入口 无 有    ShardingSphere-JDBC 的优势在于对 Java 应用的友好度。</description>
    </item>
    
    <item>
      <title>ShardingSphere-Proxy</title>
      <link>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/concepts/adaptor/shardingsphere-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/concepts/adaptor/shardingsphere-proxy/</guid>
      <description>简介 ShardingSphere-Proxy 是 Apache ShardingSphere 的第二个产品。 它定位为透明化的数据库代理端，提供封装了数据库二进制协议的服务端版本，用于完成对异构语言的支持。 目前提供 MySQL 和 PostgreSQL（兼容 openGauss 等基于 PostgreSQL 的数据库）版本，它可以使用任何兼容 MySQL/PostgreSQL 协议的访问客户端（如：MySQL Command Client, MySQL Workbench, Navicat 等）操作数据，对 DBA 更加友好。
 向应用程序完全透明，可直接当做 MySQL/PostgreSQL 使用。 适用于任何兼容 MySQL/PostgreSQL 协议的的客户端。  对比     ShardingSphere-JDBC ShardingSphere-Proxy     数据库 任意 MySQL/PostgreSQL   连接消耗数 高 低   异构语言 仅Java 任意   性能 损耗低 损耗略高   无中心化 是 否   静态入口 无 有    ShardingSphere-Proxy 的优势在于对异构语言的支持，以及为 DBA 提供可操作入口。</description>
    </item>
    
    <item>
      <title>混合架构</title>
      <link>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/concepts/adaptor/hybrid-adaptors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/concepts/adaptor/hybrid-adaptors/</guid>
      <description>ShardingSphere-JDBC 采用无中心化架构，与应用程序共享资源，适用于 Java 开发的高性能的轻量级 OLTP 应用； ShardingSphere-Proxy 提供静态入口以及异构语言的支持，独立于应用程序部署，适用于 OLAP 应用以及对分片数据库进行管理和运维的场景。
Apache ShardingSphere 是多接入端共同组成的生态圈。 通过混合使用 ShardingSphere-JDBC 和 ShardingSphere-Proxy，并采用同一注册中心统一配置分片策略，能够灵活的搭建适用于各种场景的应用系统，使得架构师更加自由地调整适合与当前业务的最佳系统架构。</description>
    </item>
    
  </channel>
</rss>