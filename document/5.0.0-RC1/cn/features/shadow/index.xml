<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>影子库压测 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/features/shadow/</link>
    <description>Recent content in 影子库压测 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.0.0-RC1/cn/features/shadow/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>核心概念</title>
      <link>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/features/shadow/concept/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/features/shadow/concept/</guid>
      <description>影子库开关 影子库开关。压力测试是一个特定时段的需求，在需要时开启即可。
生产数据库 生产数据使用的数据库。
影子数据库 进行压测数据隔离的影子数据库，与生产数据库应当使用相同的配置。
影子表 进行压测数据相关的表，与生产数据库中对应表具有相同表结构。
影子算法 目前提供 2 种类型影子算法。 由于影子算法和业务实现紧密相关，因此并未提供默认的影子算法。
 列影子算法  对应 ColumnShadowAlgorithm，适用于用户压测过程中，对压测执行链路上执行的SQL涉及的某个字段的值满足一定匹配条件的场景。
优点：用户只需要控制流量数据不需要修改代码和SQL就可以完成测试。
不足：仅支持DML语句
 注解影子算法  对应 NoteShadowAlgorithm，适用于用户压测过程中，对压测执行链路上执行的SQL不能确定涉及字段的值的场景。
优点：用户可以不确定链路上执行SQL细节，只要知道那个SQL执行即可。
不足：用户需要改代码或者SQL</description>
    </item>
    
    <item>
      <title>实现原理</title>
      <link>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/features/shadow/principle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/features/shadow/principle/</guid>
      <description>整体架构 Apache ShardingSphere 通过解析 SQL，对传入的 SQL 进行影子判定，根据配置文件中用户设置的影子规则，路由到生产库或者影子库。
影子规则 影子规则包含影子数据源映射关系，影子表以及影子算法。
影子库开关：影子库功能开关，默认值 false。可选值 true/false
影子库映射：生产数据源名称和影子数据源名称映射关系。
影子表：压测相关的表，影子库中必须包含影子表。影子表需要指定对应的影子库映射和影子算法。
影子算法：SQL 路由影子算法。
路由过程 以 INSERT 语句为例，在写入数据时，Apache ShardingSphere 会对 SQL 进行解析，再根据配置文件中的规则，构造一条路由链。在当前版本的功能中， 影子功能处于路由链中的最后一个执行单元，即，如果有其他需要路由的规则存在，如分片，Apache ShardingSphere 会首先根据分片规则，路由到某一个数据库，再 执行影子路由判定流程，判定执行SQL满足影子规则的配置，数据路由到与之对应的影子库，生产数据则维持不变。
影子判定流程 影子库开关开启时，会对执行的 SQL 语句进行影子判定。影子判定目前支持两种类型算法，用户可根据实际业务需求选择一种或者组合使用。
DML 语句 支持两种算法。影子判定会首先判断执行 SQL 关联的表是否和影子表有交集。如果有交集，对交集部分影子表关联的影子算法依次判定。如果影子表关联影子算法有任何一个判定成功。SQL 语句路由到影子库。 没有交集或者影子算法判定不成功，SQL 语句路由到生产库。
DDL 语句 仅支持注解影子算法。一般不会对 DDL 语句的压力测试。主要做为影子库环境的初始化或者影子表调整时执行。
影子判定会首先判断执行 SQL 是否包含注解，如果包含注解对影子规则中的注解影子算法依次判定。如果注解影子算法有任何一个判定成功。SQL 语句路由到影子库。 没有 SQL 不包含注解或者注解影子算法判定不成功，路由到生产库。
影子算法 影子算法详情，请参见内置影子算法列表
使用案例 场景需求 假设一个电商网站要对下单业务进行压测，对订单表 t_order 进行压测。生产数据执行到生产库，即：ds。测试数据执行到影子库，即：ds-shadow。
影子库配置 建议配置如下（YAML 格式展示）：
enable: true data-sources: shadow-data-source: source-data-source-name: ds shadow-data-source-name: ds-shadow tables: t_order: data-source-names: shadow-data-source shadow-algorithm-names: - simple-note-algorithm - user-id-match-algorithm shadow-algorithms: simple-note-algorithm: type: SIMPLE_NOTE props: shadow: true foo: bar user-id-match-algorithm: type: COLUMN_REGEX_MATCH props: operation: insert column: user_id regex: &amp;#34;[0]&amp;#34; props: sql-comment-parse-enabled: true 注意：</description>
    </item>
    
    <item>
      <title>使用规范</title>
      <link>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/features/shadow/use-norms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0-RC1/cn/features/shadow/use-norms/</guid>
      <description>影子数据库 支持项  后端数据库为 MySQL、Oracle、PostgreSQL、SQLServer；  不支持项  NoSQL 数据库；  影子算法 支持项  注解影子算法支持 MDL，DDL 语句； 列影子算法基本支持常用的 MDL 语句；  不支持项  列影子算法不支持 DDL 语句。 列影子算法不支持范围值匹配操作，比如：子查询、BETWEEN、GROUP BY &amp;hellip; HAVING等； 使用影子库功能+分库分表功能，部分特殊SQL不支持，请参考SQL使用规范  列影子算法 DML 语句支持度列表  INSERT 语句  对 INSERT 插入的字段和插入的值判定
   操作类型 SQL语句 是否支持     INSERT INSERT INTO table (column,&amp;hellip;) VALUES (value,&amp;hellip;) 支持   INSERT INSERT INTO table (column,&amp;hellip;) VALUES (value,&amp;hellip;),(value,&amp;hellip;),&amp;hellip; 支持   INSERT INSERT INTO table (column,&amp;hellip;) SELECT column1 from table1 where column1 = value1 不支持     SELECT/UPDATE/DELETE语句  对 WHERE 条件中包含的字段和值进行判定</description>
    </item>
    
  </channel>
</rss>