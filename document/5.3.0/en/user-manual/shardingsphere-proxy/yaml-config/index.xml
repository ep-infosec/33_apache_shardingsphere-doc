<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yaml Configuration on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.3.0/en/user-manual/shardingsphere-proxy/yaml-config/</link>
    <description>Recent content in Yaml Configuration on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.3.0/en/user-manual/shardingsphere-proxy/yaml-config/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Authorization</title>
      <link>https://shardingsphere.apache.org/document/5.3.0/en/user-manual/shardingsphere-proxy/yaml-config/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.3.0/en/user-manual/shardingsphere-proxy/yaml-config/authentication/</guid>
      <description>Authorization configuration provided for users who can connect to ShardingSphere-Proxy. Users can be granted different authorities.
Background ShardingSphere-Proxy uses authority to configure user and authorization information.
Thanks to ShardingSphere&amp;rsquo;s pluggable architecture, Proxy provides two levels of privilege providers, namely:
 ALL_PERMITTED: grant all authorities by default without authentication. DATABASE_PERMITTED: grant users the authority to specify a logical database, mapped through user-database-mappings.  The administrator can choose which privilege provider to use as needed when configuring authority.</description>
    </item>
    
    <item>
      <title>Properties</title>
      <link>https://shardingsphere.apache.org/document/5.3.0/en/user-manual/shardingsphere-proxy/yaml-config/props/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.3.0/en/user-manual/shardingsphere-proxy/yaml-config/props/</guid>
      <description>Background Apache ShardingSphere can configure system-level configuration through property configuration. This section describes the configuration items in server.yaml.
Parameters    Name Data Type Description Default Dynamic Update     sql-show (?) boolean Whether to print SQL in logs. Printing SQL can help developers quickly locate system problems. Logs contain the following contents: logical SQL, authentic SQL and SQL parsing result. If configuration is enabled，logs will use Topic ShardingSphere-SQL，and log level is INFO。 false True   sql-simple (?</description>
    </item>
    
    <item>
      <title>Rules</title>
      <link>https://shardingsphere.apache.org/document/5.3.0/en/user-manual/shardingsphere-proxy/yaml-config/rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.3.0/en/user-manual/shardingsphere-proxy/yaml-config/rules/</guid>
      <description>Background This section explains how to configure the ShardingSphere-Proxy rules.
Parameters Explained Rules configuration for ShardingSphere-Proxy is the same as ShardingSphere-JDBC. For details, please refer to ShardingSphere-JDBC Rules Configuration.
Notice Unlike ShardingSphere-JDBC, the following rules need to be configured in ShardingSphere-Proxy&amp;rsquo;s server.yaml:
 SQL Parsing  sqlParser: sqlCommentParseEnabled: true sqlStatementCache: initialCapacity: 2000 maximumSize: 65535 parseTreeCache: initialCapacity: 128 maximumSize: 1024  Distributed Operations  transaction: defaultType: XA providerType: Atomikos  SQL Translator  sqlTranslator: type: useOriginalSQLWhenTranslatingFailed: </description>
    </item>
    
  </channel>
</rss>